import numpy as np

def reduce_mem_usage(df):
    start_mem_usg = df.memory_usage().sum() / 1024**2 
    print("Memory usage of properties dataframe is :",start_mem_usg," MB")
    #NAlist = [] # Keeps track of columns that have missing values filled in. 
   
    for col in (c for c in df.columns if np.issubdtype(df[c].dtype, np.number)):
   
            # Print current column type
            print("******************************")
            print("Column: ",col)
            print("dtype before: ",df[col].dtype)

            #Col value ranges
            mx = df[col].max()
            mn = df[col].min()

            # Integer does not support NA, therefore, NA needs to be filled
            #if not np.isfinite(df[col]).all(): 
            #    NAlist.append(col)
            #    df[col].fillna(mn-1,inplace=True)  

            # test if column can be converted to an integer
            asint = df[col].fillna(0).astype(np.int64)
            errors_from_convert_to_int = (df[col] - asint).sum()

           # numpy.isfinite(df[col]).all()

            if (-0.01 < errors_from_convert_to_int < 0.01) and np.isfinite(df[col]).all():   #this col is an int!
                df[col].fillna(value=-1, inplace=True)  #change NA values to -1
                
                info = np.iinfo
                # Make Integer/unsigned Integer datatypes
                if mn >= 0:
                    types = (np.uint8, np.uint16, np.uint32, np.uint64)
                else:
                    types = (np.int8, np.int16, np.int32, np.int64)

            else:
                info = np.finfo
                types = (np.float16, np.float32, np.float64)

            for t in types:
                if info(t).min <= mn and mx <= info(t).max:
                    df[col] = df[col].astype(t)
                    break 
            if(np.issubdtype(df[col].dtype, np.integer)):
                ##note: if dtype chgs from float to int, Inf is not allowed!!
                #hack to change the NAN & Inf to -1 may not be good!! JARED
                df[col].fillna(value=-1, inplace=True)  #change NA values to -1

            # Print new column type
            print("dtype after: ",df[col].dtype)
            print("******************************")

    # Print final result
    print("___MEMORY USAGE AFTER COMPLETION:___")
    mem_usg = df.memory_usage().sum() / 1024**2 
    print("Memory usage is: ",mem_usg," MB")
    print("This is ",100*mem_usg/start_mem_usg,"% of the initial size")
    return df